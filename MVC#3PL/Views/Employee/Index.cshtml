@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";
    string S1 = ViewData["Message"] as string;//require Casting
    string S2 = ViewBag.Message;// Doesn't Require casting
}
<h1>All Employees</h1>
<a asp-action="Create" class="btn btn-primary">Create Employee</a>
<br />
<br />

<form asp-action="Index">
<div class="row m-5">
    <div class="col-8">
        <input type="text" name="search" id="search" placeholder="Search" class="form-control"  />
    </div>
    <div class="col-4">
        <input type="submit" value="Search" class="btn btn-success" />
    </div>
</div>
</form>


@* <div class="alert alert-danger"><p> @ViewData["Message"] </p> </div>
<div class="alert alert-warning"><p> @ViewBag.Message </p> </div> *@
@if(!string.IsNullOrEmpty(@TempData["Message"]as string)){
<div class="alert alert-success"><p> @TempData["Message"] </p> </div>
}
@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(E => E.Image)</th>
                <th>@Html.DisplayNameFor(E => E.Name)</th>
                <th>@Html.DisplayNameFor(E => E.Age)</th>
                <th>@Html.DisplayNameFor(E => E.Adress)</th>
                <th>@Html.DisplayNameFor(E => E.Email)</th>
                <th>@Html.DisplayNameFor(E => E.Phone)</th>
                <th>@Html.DisplayNameFor(E => E.Salary)</th>
                <th>@Html.DisplayNameFor(E => E.IsActive)</th>
                <th>@Html.DisplayNameFor(E => E.HiringDate)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td><img src="/files/images/@employee.ImageName" width="75" class="img-fluid rounded-circle" /></td>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Adress</td>
                    <td>@Html.DisplayFor(E => employee.Email)</td>
                    <td>@employee.Phone</td>
                    <td>@Html.DisplayFor(E => employee.Salary)</td>
                    <td>@Html.DisplayFor(E => employee.IsActive)</td>
                    <td>@employee.HiringDate</td>


                    <partial name="PartialView\EmpDeptIndex" model="@employee.Id" />

                </tr>
            }
        </tbody>
    </table>

}
else
{
    <div class="mt-4 alert alert-warning">
        <h4>There is No Employee :(</h4>
    </div>
}
